#
# Copyright (c) 2015. Arbuz LLC.  All rights reserved.  http://arbuzworks.com/
# The software in this package is published under the terms of the CPAL v1.0
# license, a copy of which has been included with this distribution in the
# LICENSE.txt file.
#


#Mandatory. Unique identifier for the cluster. It can be any alphanumeric string.
fulcrum.clusterId = fulcrum
#Mandatory. Unique ID of the node within the cluster. It can be any integer between 1 and the number of nodes in the cluster.\
fulcrum.clusterNodeId = 1

#Comma-separated list of interfaces to use by Hazelcast. Wildcards are supported, as shown below
#   192.168.1.*,192.168.100.25
fulcrum.cluster.networkinterfaces = 127.0.0.1

#The nodes that belong to the cluster, in the form <host:port>, for example, 172.16.9.24:9000. Specifying just one IP address enables the server to join the cluster.
#The port number is optional; if not set, the default is 5701. To include more than one host, create a comma-separated list.
#This option configures the cluster with the specified fixed IP addresses. Use this option if you are not relying on multicast for cluster node discovery. If using this option, set mule.cluster.multicastenabled to false (see next item in this table).
#
#Examples:
#
#Two nodes listening on port 9000:
#
#172.16.9.24:9000,172.16.9.51:9000
#Two nodes listening on port 5701:
#
#192.168.1.19,192.168.1.20
fulcrum.cluster.nodes = 127.0.0.1:47500..47509

#Enable/disable multicast. Set to false if using fixed IP addresses for cluster node discovery (see option mule.cluster.nodes above).
fulcrum.cluster.multicastenabled = true

#Cache mode REPLICATED or PARTITIONED
fulcrum.objectstore.cacheMode = REPLICATED

#Cache atomicity mode controls whether cache should maintain fully transactional semantics
#or more light-weight atomic behavior. It is recommended that ATOMIC mode is
#used whenever transactions and explicit locking are not needed. Note that in #ATOMIC
#mode cache will still maintain full data consistency across all cache nodes.
fulcrum.objectstore.atomicityMode = TRANSACTIONAL

#Cache distribution mode NEAR_ONLY or NEAR_PARTITIONED or PARTITIONED_ONLY
fulcrum.objectstore.distributionMode = NEAR_PARTITIONED

#Mode indicating how GridGain should wait for write replies from other nodes. Default
#value is FULL_ASYNC, which means that GridGain will not wait for responses from
#participating nodes. This means that by default remote nodes may get their state updated slightly after
#any of the cache write methods complete, or after GridCacheTx#commit() method completes.
#FULL_SYNC or FULL_ASYNC or PRIMARY_SYNC
fulcrum.objectstore.writeSynchronizationMode = FULL_SYNC

#Defines set of memory modes. Memory modes help control whether cache entries are
#stored on heap memory, offheap memory, or in swap space.
#- ONHEAP_TIERED
#- OFFHEAP_TIERED
#- OFFHEAP_VALUES
fulcrum.objectstore.memoryMode = OFFHEAP_VALUES
