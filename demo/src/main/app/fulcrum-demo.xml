<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2015. Arbuz LLC.  All rights reserved.  http://arbuzworks.com/
  ~ The software in this package is published under the terms of the CPAL v1.0
  ~ license, a copy of which has been included with this distribution in the
  ~ LICENSE.txt file.
  -->

<mule xmlns:spring="http://www.springframework.org/schema/beans" xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
      xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" version="CE-3.5.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/current/mule-jbossts.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd">
    <configuration doc:name="Configuration">
        <expression-language autoResolveVariables="true">
            <import class="org.mule.util.StringUtils"/>
        </expression-language>
    </configuration>
    <jbossts:transaction-manager doc:name="JBoss Transaction Manager"/>
    <file:endpoint name="fileConnector" path="${in.path}" doc:name="File Connector"/>

    <custom-transformer class="com.fulcrum.mule.cluster.demo.transformer.GroupAndSumTransformer"
                        name="GroupAndSumTransformer"
                        doc:name="Group and Sum Transformer"/>
    <custom-transformer class="com.fulcrum.mule.cluster.demo.transformer.MapToCsvTransformer"
                        name="MapToCsvTransformer"
                        doc:name="Map to Csv Transformer"/>

    <flow name="startFlow" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="filePollingJob" repeatInterval="10000" doc:name="File Polling Job">
            <quartz:endpoint-polling-job>
                <quartz:job-endpoint ref="fileConnector"/>
            </quartz:endpoint-polling-job>
        </quartz:inbound-endpoint>
        <object-to-string-transformer doc:name="Convert File to String"/>
        <vm:outbound-endpoint path="request" doc:name="Request VM"/>
    </flow>

    <flow name="splitterFlow">
        <vm:inbound-endpoint  path="request" doc:name="Get Request" exchange-pattern="one-way"/>
        <splitter expression="#[StringUtils.split(message.payload, '\n\r')]" doc:name="Split CVS File"/>
        <vm:outbound-endpoint path="aggregate" doc:name="Call Aggregation Flow" exchange-pattern="one-way"/>
    </flow>

    <flow name="aggregationFlow" processingStrategy="synchronous">
        <vm:inbound-endpoint path="aggregate" doc:name="Take Aggregate Request" exchange-pattern="one-way">
            <xa-transaction action="ALWAYS_BEGIN"/>
        </vm:inbound-endpoint>
        <transactional action="BEGIN_OR_JOIN" doc:name="Transactional">
            <component class="com.fulcrum.mule.cluster.demo.service.BillingService" doc:name="Call BillingService"/>
            <logger level="INFO" message="#[message.payload]" doc:name="Message Payload"/>
            <collection-aggregator failOnTimeout="true" doc:name="Aggregate CVS Records" timeout="3600000"/>
            <transformer ref="GroupAndSumTransformer" doc:name="Group and Sum Transformer Reference"/>
        </transactional>
        <vm:outbound-endpoint path="publish" doc:name="Put Publish Request" exchange-pattern="one-way">
            <xa-transaction action="ALWAYS_JOIN"/>
        </vm:outbound-endpoint>
    </flow>

    <flow name="publishFlow">
        <vm:inbound-endpoint path="publish" doc:name="Take Publish Request" exchange-pattern="one-way"/>
        <idempotent-message-filter idExpression="#[message.getCorrelationId()]" doc:name="Idempotent Message">
            <managed-store storeName="publishFilter"/>
        </idempotent-message-filter>
        <transformer ref="MapToCsvTransformer" doc:name="Generate CSV file"/>
        <file:outbound-endpoint name="resultFileSaver" path="${out.path}"
                                outputPattern="report.csv" responseTimeout="5000" doc:name="File"/>
    </flow>

</mule>
